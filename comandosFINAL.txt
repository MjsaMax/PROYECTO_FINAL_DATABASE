----------------------------------CREACION DE BASE DE DATOS Y TUPLAS DEL ANTERIOR PROYECTO-----------------------------
sudo -i -u postgres
psql
CREATE DATABASE app_taxi_db;
\c app_taxi_db;
CREATE TABLE pasajero (
	id_pasajero SERIAL PRIMARY KEY,
	nombre VARCHAR(100) NOT NULL,
	telefono VARCHAR(15) NOT NULL,
	correo_electronico VARCHAR(100) NOT NULL,
	direccion VARCHAR(255) NOT NULL
	);
	
CREATE TABLE conductor (
	id_conductor SERIAL PRIMARY KEY,
	nombre VARCHAR(100) NOT NULL,
	telefono VARCHAR(15) NOT NULL,
	licencia VARCHAR(10) NOT NULL
	);
	
CREATE TABLE vehiculo (
	id_vehiculo SERIAL PRIMARY KEY,
	id_conductor INT NOT NULL,
	marca VARCHAR(15) NOT NULL,
	modelo VARCHAR(15) NOT NULL,
	ano INT NOT NULL,
	placa VARCHAR(6) NOT NULL,
	
	FOREIGN KEY (id_conductor) REFERENCES conductor(id_conductor)
	);
	
CREATE TABLE viaje (
	id_viaje SERIAL PRIMARY KEY,
	id_pasajero INT NOT NULL,
	id_vehiculo INT NOT NULL,
	origen VARCHAR(255) NOT NULL,
	destino VARCHAR(255) NOT NULL,
	fecha TIMESTAMP NOT NULL,
	Duracion TIME,
	
	FOREIGN KEY (id_pasajero) REFERENCES pasajero(id_pasajero),
	FOREIGN KEY (id_vehiculo) REFERENCES vehiculo(id_vehiculo)
	);
	
CREATE TABLE pago (
	id_pago SERIAL PRIMARY KEY,
	id_viaje INT NOT NULL,
	monto DECIMAL(10,2) NOT NULL,
	metodo_pago VARCHAR(50) NOT NULL,
	fecha_pago TIMESTAMP NOT NULL,
	
	FOREIGN KEY (id_viaje) REFERENCES viaje(id_viaje)
);

CREATE TABLE calificacion (
	id_viaje INT NOT NULL,
	calificacion INT NOT NULL,
	comentario TEXT,
	
	FOREIGN KEY (id_viaje) REFERENCES viaje(id_viaje)
	);
	INSERT INTO pasajero (nombre, telefono, correo_electronico, direccion) VALUES
('Juan Pérez', '1234567890', 'juan@example.com', 'Calle Falsa 123'),
('María López', '0987654321', 'maria@example.com', 'Avenida Siempre Viva 742'),
('Pedro García', '1122334455', 'pedro@example.com', 'Calle Luna 456'),
('Ana Torres', '3344556677', 'ana@example.com', 'Calle Sol 789'),
('Luis Sánchez', '4455667788', 'luis@example.com', 'Calle Estrella 101'),
('Carlos Ramírez', '5566778899', 'carlos@example.com', 'Calle Nube 202'),
('Laura Díaz', '6677889900', 'laura@example.com', 'Calle Viento 303'),
('Julia Fernández', '7788990011', 'julia@example.com', 'Calle Trueno 404'),
('Miguel Álvarez', '8899001122', 'miguel@example.com', 'Calle Relámpago 505'),
('Teresa Vargas', '9900112233', 'teresa@example.com', 'Calle Nieve 606'),
('Fernando Castillo', '1233211234', 'fernando@example.com', 'Calle Rayo 707'),
('Andrea Márquez', '2344322345', 'andrea@example.com', 'Calle Fuego 808'),
('David Herrera', '3455433456', 'david@example.com', 'Calle Tierra 909'),
('Paula Medina', '4566544567', 'paula@example.com', 'Calle Agua 1010'),
('Ricardo Ríos', '5677655678', 'ricardo@example.com', 'Calle Mar 1111'),
('Mariana Paredes', '6788766789', 'mariana@example.com', 'Calle Río 1212'),
('Tomás Ruiz', '7899877890', 'tomas@example.com', 'Calle Bosque 1313'),
('Claudia Gómez', '8900988901', 'claudia@example.com', 'Calle Montaña 1414'),
('Patricia Luna', '9012090123', 'patricia@example.com', 'Calle Valle 1515'),
('Jorge Bravo', '0123201234', 'jorge@example.com', 'Calle Lago 1616');

INSERT INTO conductor (nombre, telefono, licencia) VALUES
('Carlos Rivera', '1122334455', 'ABC12345'),
('Ana Gómez', '5566778899', 'XYZ67890'),
('José Torres', '2233445566', 'DEF54321'),
('Lucía Ramos', '6677889911', 'GHI98765'),
('Marcos Peña', '7788990022', 'JKL13579'),
('Verónica Flores', '8899001133', 'MNO97531'),
('Oscar Navarro', '9900112244', 'PQR86420'),
('Isabel Sánchez', '1010102020', 'STU10987'),
('Javier Quispe', '1212123030', 'VWX65432'),
('Sandra Salazar', '2323234040', 'YZA32109'),
('Diego Chávez', '3434345050', 'BCD21098'),
('Sofía Álvarez', '4545456060', 'EFG09876'),
('Alberto Medina', '5656567070', 'HIJ98765'),
('Beatriz Díaz', '6767678080', 'KLM87654'),
('Ramiro Guzmán', '7878789090', 'NOP76543'),
('Paola Vargas', '8989891010', 'QRS65432'),
('Cristina Ríos', '9090901111', 'TUV54321'),
('Manuel Paredes', '1011012121', 'WXY43210'),
('Gonzalo Salas', '1111113131', 'ZAB32109'),
('Sara Rodríguez', '1212124141', 'BCD21098');

INSERT INTO vehiculo (id_conductor, marca, modelo, ano, placa) VALUES
(1, 'Toyota', 'Corolla', 2020, 'XYZ123'),
(2, 'Honda', 'Civic', 2019, 'ABC456'),
(3, 'Ford', 'Focus', 2018, 'DEF789'),
(4, 'Chevrolet', 'Spark', 2021, 'GHI012'),
(5, 'Nissan', 'Versa', 2020, 'JKL345'),
(6, 'Kia', 'Rio', 2019, 'MNO678'),
(7, 'Hyundai', 'Accent', 2018, 'PQR901'),
(8, 'Mazda', '3', 2021, 'STU234'),
(9, 'Volkswagen', 'Jetta', 2020, 'VWX567'),
(10, 'BMW', 'Series 3', 2019, 'YZA890'),
(11, 'Mercedes', 'A-Class', 2018, 'BCD123'),
(12, 'Audi', 'A4', 2021, 'EFG456'),
(13, 'Renault', 'Duster', 2020, 'HIJ789'),
(14, 'Jeep', 'Compass', 2019, 'KLM012'),
(15, 'Subaru', 'Impreza', 2018, 'NOP345'),
(16, 'Peugeot', '208', 2021, 'QRS678'),
(17, 'Fiat', '500', 2020, 'TUV901'),
(18, 'Opel', 'Astra', 2019, 'WXY234'),
(19, 'Chevrolet', 'Onix', 2018, 'ZAB567'),
(20, 'Ford', 'Fiesta', 2021, 'BCD890');

INSERT INTO viaje (id_pasajero, id_vehiculo, origen, destino, fecha, duracion) VALUES
(1, 1, 'Calle Falsa 123', 'Avenida Siempre Viva 742', '2024-10-30 10:00:00', '00:30:00'),
(2, 2, 'Plaza Central', 'Estación Norte', '2024-10-30 11:00:00', '00:45:00'),
(3, 3, 'Centro Comercial', 'Aeropuerto', '2024-10-30 12:00:00', '01:00:00'),
(4, 4, 'Parque Principal', 'Universidad', '2024-10-30 13:00:00', '00:25:00'),
(5, 5, 'Hospital', 'Hotel', '2024-10-30 14:00:00', '00:20:00'),
(6, 6, 'Calle Sol 789', 'Estación Sur', '2024-10-30 15:00:00', '00:35:00'),
(7, 7, 'Biblioteca', 'Museo', '2024-10-30 16:00:00', '00:15:00'),
(8, 8, 'Parque Norte', 'Teatro', '2024-10-30 17:00:00', '00:40:00'),
(9, 9, 'Centro Médico', 'Estadio', '2024-10-30 18:00:00', '00:55:00'),
(10, 10, 'Banco', 'Estación Central', '2024-10-30 19:00:00', '00:50:00'),
(11, 11, 'Escuela', 'Oficina', '2024-10-30 20:00:00', '00:30:00'),
(12, 12, 'Parque Industrial', 'Zona Comercial', '2024-10-30 21:00:00', '00:20:00'),
(13, 13, 'Terminal de Buses', 'Puerto', '2024-10-30 22:00:00', '00:25:00'),
(14, 14, 'Estadio Sur', 'Centro', '2024-10-30 23:00:00', '00:45:00'),
(15, 15, 'Teatro Nacional', 'Parque de la Amistad', '2024-10-31 00:00:00', '01:10:00'),
(16, 16, 'Estación Norte', 'Plaza Central', '2024-10-31 01:00:00', '00:35:00'),
(17, 17, 'Zoológico', 'Planetario', '2024-10-31 02:00:00', '00:50:00'),
(18, 18, 'Museo de Arte', 'Centro Comercial', '2024-10-31 03:00:00', '00:55:00'),
(19, 19, 'Hospital Central', 'Hotel Centro', '2024-10-31 04:00:00', '00:20:00'),
(20, 20, 'Escuela de Artes', 'Universidad', '2024-10-31 05:00:00', '00:25:00');

INSERT INTO pago (id_viaje, monto, metodo_pago, fecha_pago) VALUES
(1, 25.50, 'Tarjeta de Crédito', '2024-10-30 10:30:00'),
(2, 18.75, 'Efectivo', '2024-10-30 11:45:00'),
(3, 40.00, 'Tarjeta de Débito', '2024-10-30 12:30:00'),
(4, 15.25, 'Efectivo', '2024-10-30 13:25:00'),
(5, 20.00, 'Tarjeta de Crédito', '2024-10-30 14:20:00'),
(6, 22.50, 'Efectivo', '2024-10-30 15:35:00'),
(7, 12.75, 'Tarjeta de Débito', '2024-10-30 16:15:00'),
(8, 30.00, 'Tarjeta de Crédito', '2024-10-30 17:40:00'),
(9, 50.00, 'Efectivo', '2024-10-30 18:55:00'),
(10, 45.00, 'Tarjeta de Débito', '2024-10-30 19:50:00'),
(11, 27.30, 'Tarjeta de Crédito', '2024-10-30 20:30:00'),
(12, 19.50, 'Efectivo', '2024-10-30 21:20:00'),
(13, 23.75, 'Tarjeta de Crédito', '2024-10-30 22:25:00'),
(14, 29.90, 'Efectivo', '2024-10-30 23:45:00'),
(15, 35.50, 'Tarjeta de Débito', '2024-10-31 00:10:00'),
(16, 25.00, 'Tarjeta de Crédito', '2024-10-31 01:35:00'),
(17, 47.50, 'Efectivo', '2024-10-31 02:50:00'),
(18, 55.00, 'Tarjeta de Crédito', '2024-10-31 03:55:00'),
(19, 17.25, 'Efectivo', '2024-10-31 04:20:00'),
(20, 19.90, 'Tarjeta de Débito', '2024-10-31 05:25:00');

INSERT INTO calificacion (id_viaje, calificacion, comentario) VALUES
(1, 5, 'Excelente servicio'),
(2, 4, 'Conductor amable'),
(3, 3, 'Podría mejorar la puntualidad'),
(4, 5, 'Muy rápido y amable'),
(5, 2, 'Vehículo sucio'),
(6, 5, 'Excelente manejo'),
(7, 4, 'Buen servicio en general'),
(8, 5, 'Conductor profesional'),
(9, 4, 'Buena experiencia'),
(10, 3, 'Falta de comunicación'),
(11, 5, 'Conductor amigable'),
(12, 2, 'Retraso en el viaje'),
(13, 4, 'Satisfecho con el servicio'),
(14, 5, 'Muy cómodo'),
(15, 5, 'Excelente atención'),
(16, 3, 'Podría ser más rápido'),
(17, 5, 'Perfecto'),
(18, 4, 'Conductor muy educado'),
(19, 3, 'Servicio aceptable'),
(20, 5, 'Muy satisfecho');
\q
exit

----- DATA PARA LAS VISTAS -------------

-- Insertar viajes sin pagos registrados
INSERT INTO viaje (id_pasajero, id_vehiculo, origen, destino, fecha, duracion)
VALUES
(1, 1, 'Plaza Norte', 'Centro Histórico', '2024-12-15 10:00:00', '00:30:00'),
(2, 2, 'Estación Central', 'Parque Principal', '2024-12-16 12:00:00', '00:45:00'),
(3, 3, 'Museo de Arte', 'Terminal de Buses', '2024-12-17 15:30:00', '01:00:00');



-- Insertar viajes sin calificación registrada
INSERT INTO viaje (id_pasajero, id_vehiculo, origen, destino, fecha, duracion)
VALUES
(4, 4, 'Aeropuerto', 'Hotel Centro', '2024-12-18 18:00:00', '00:35:00'),
(5, 5, 'Hospital General', 'Estadio Nacional', '2024-12-19 20:15:00', '00:50:00');



-------INGRESO A LA BASE DE DATOS YA CREADA EN EL ANTERIOR PROYECTO------------

sudo -i -u postgres
psql
\c app_taxi_db;

--------CREACION DE TABLAS EXTRAS PARA FORMALIZAR 1NF,2NF,3NF-----------------


CREATE TABLE viaje_detallado (
    id_viaje_detallado SERIAL PRIMARY KEY,
    fecha_hora TIMESTAMP,
    origen VARCHAR(255),
    destino VARCHAR(255),
    pasajero_info TEXT,
    conductor_info TEXT,
    vehiculo_info TEXT,
    monto DECIMAL(10, 2),
    metodo_pago VARCHAR(50),
    calificacion INT,
    comentarios TEXT
);

INSERT INTO viaje_detallado (fecha_hora, origen, destino, pasajero_info, conductor_info, vehiculo_info, monto, metodo_pago, calificacion, comentarios)
VALUES 
('2024-01-01 10:00:00', 'Calle A', 'Calle B', 'Juan Pérez,123456789', 'Carlos Ruiz,987654321', 'Toyota,Corolla,ABC123', 25.50, 'Tarjeta', 5, 'Excelente servicio'),
('2024-01-02 15:30:00', 'Calle C', 'Calle D', 'María López,234567890', 'Ana García,876543210', 'Honda,Civic,XYZ789', 30.00, 'Efectivo', 4, 'Buen viaje');

CREATE TABLE reserva_evento (
    id_reserva SERIAL PRIMARY KEY,
    fecha_evento DATE,
    tipo_evento VARCHAR(100),
    cliente_nombre VARCHAR(100),
    cliente_telefono VARCHAR(20),
    cantidad_vehiculos INT,
    vehiculos_asignados TEXT,
    monto_total DECIMAL(10, 2)
);

INSERT INTO reserva_evento (fecha_evento, tipo_evento, cliente_nombre, cliente_telefono, cantidad_vehiculos, vehiculos_asignados, monto_total)
VALUES 
('2024-02-15', 'Boda', 'Pedro Gómez', '555-1234', 3, 'ABC123,XYZ789,DEF456', 150.00),
('2024-03-20', 'Conferencia', 'Empresa XYZ', '555-5678', 2, 'GHI789,JKL012', 100.00);

CREATE TABLE mantenimiento_vehiculo (
    id_mantenimiento SERIAL PRIMARY KEY,
    fecha_mantenimiento DATE,
    vehiculo_placa VARCHAR(20),
    tipo_mantenimiento VARCHAR(100),
    costo DECIMAL(10, 2),
    mecanico_nombre VARCHAR(100),
    mecanico_especialidad VARCHAR(100),
    taller_nombre VARCHAR(100),
    taller_direccion VARCHAR(255),
    taller_telefono VARCHAR(20)
);

INSERT INTO mantenimiento_vehiculo (fecha_mantenimiento, vehiculo_placa, tipo_mantenimiento, costo, mecanico_nombre, mecanico_especialidad, taller_nombre, taller_direccion, taller_telefono)
VALUES 
('2024-04-10', 'ABC123', 'Cambio de aceite', 50.00, 'Luis Martínez', 'Mecánica general', 'Taller Rápido', 'Calle Principal 123', '555-9876'),
('2024-04-15', 'XYZ789', 'Alineación', 80.00, 'Ana Rodríguez', 'Alineación y balanceo', 'Taller Rápido', 'Calle Principal 123', '555-9876');


-----------------NORMALIZACION A 1NF--------------------------------


CREATE TABLE viaje_detallado_1nf (
    id_viaje_detallado SERIAL PRIMARY KEY,
    fecha_hora TIMESTAMP,
    origen VARCHAR(255),
    destino VARCHAR(255),
    pasajero_nombre VARCHAR(100),
    pasajero_telefono VARCHAR(20),
    conductor_nombre VARCHAR(100),
    conductor_telefono VARCHAR(20),
    vehiculo_marca VARCHAR(50),
    vehiculo_modelo VARCHAR(50),
    vehiculo_placa VARCHAR(20),
    monto DECIMAL(10, 2),
    metodo_pago VARCHAR(50),
    calificacion INT,
    comentarios TEXT
);

INSERT INTO viaje_detallado_1nf (fecha_hora, origen, destino, pasajero_nombre, pasajero_telefono, conductor_nombre, conductor_telefono, vehiculo_marca, vehiculo_modelo, vehiculo_placa, monto, metodo_pago, calificacion, comentarios)
VALUES 
('2024-01-01 10:00:00', 'Calle A', 'Calle B', 'Juan Pérez', '123456789', 'Carlos Ruiz', '987654321', 'Toyota', 'Corolla', 'ABC123', 25.50, 'Tarjeta', 5, 'Excelente servicio'),
('2024-01-02 15:30:00', 'Calle C', 'Calle D', 'María López', '234567890', 'Ana García', '876543210', 'Honda', 'Civic', 'XYZ789', 30.00, 'Efectivo', 4, 'Buen viaje');

-----------------NORMALIZACION A 2NF--------------------------------


CREATE TABLE reserva_evento_2nf (
    id_reserva SERIAL PRIMARY KEY,
    fecha_evento DATE,
    tipo_evento VARCHAR(100),
    cliente_nombre VARCHAR(100),
    cliente_telefono VARCHAR(20),
    cantidad_vehiculos INT,
    monto_total DECIMAL(10, 2)
);

CREATE TABLE vehiculos_reserva_2nf (
    id_vehiculo_reserva SERIAL PRIMARY KEY,
    id_reserva INT,
    vehiculo_placa VARCHAR(20),
    FOREIGN KEY (id_reserva) REFERENCES reserva_evento_2nf(id_reserva)
);

INSERT INTO reserva_evento_2nf (fecha_evento, tipo_evento, cliente_nombre, cliente_telefono, cantidad_vehiculos, monto_total)
VALUES 
('2024-02-15', 'Boda', 'Pedro Gómez', '555-1234', 3, 150.00),
('2024-03-20', 'Conferencia', 'Empresa XYZ', '555-5678', 2, 100.00);

INSERT INTO vehiculos_reserva_2nf (id_reserva, vehiculo_placa)
VALUES 
(1, 'ABC123'), (1, 'XYZ789'), (1, 'DEF456'),
(2, 'GHI789'), (2, 'JKL012');



-----------------NORMALIZACION A 3NF--------------------------------

CREATE TABLE mantenimiento_vehiculo_3nf (
    id_mantenimiento SERIAL PRIMARY KEY,
    fecha_mantenimiento DATE,
    vehiculo_placa VARCHAR(20),
    tipo_mantenimiento VARCHAR(100),
    costo DECIMAL(10, 2),
    id_mecanico INT,
    id_taller INT
);

CREATE TABLE mecanico_3nf (
    id_mecanico SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    especialidad VARCHAR(100)
);

CREATE TABLE taller_3nf (
    id_taller SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    direccion VARCHAR(255),
    telefono VARCHAR(20)
);

INSERT INTO mecanico_3nf (nombre, especialidad)
VALUES 
('Luis Martínez', 'Mecánica general'),
('Ana Rodríguez', 'Alineación y balanceo');

INSERT INTO taller_3nf (nombre, direccion, telefono)
VALUES 
('Taller Rápido', 'Calle Principal 123', '555-9876');

INSERT INTO mantenimiento_vehiculo_3nf (fecha_mantenimiento, vehiculo_placa, tipo_mantenimiento, costo, id_mecanico, id_taller)
VALUES 
('2024-04-10', 'ABC123', 'Cambio de aceite', 50.00, 1, 1),
('2024-04-15', 'XYZ789', 'Alineación', 80.00, 2, 1);


-------------------------INGRESO DE TUPLAS A LAS TABLAS EXTRAS QUE AHORA ESTAN NORMALIZADAS---------------------------------



    INSERT INTO viaje_detallado_1nf (fecha_hora, origen, destino, pasajero_nombre, pasajero_telefono, conductor_nombre, conductor_telefono, vehiculo_marca, vehiculo_modelo, vehiculo_placa, monto, metodo_pago, calificacion, comentarios)
VALUES 
('2024-01-01 10:00:00', 'Calle A', 'Calle B', 'Juan Pérez', '123456789', 'Carlos Ruiz', '987654321', 'Toyota', 'Corolla', 'ABC123', 25.50, 'Tarjeta', 5, 'Excelente servicio'),
('2024-01-02 15:30:00', 'Calle C', 'Calle D', 'María López', '234567890', 'Ana García', '876543210', 'Honda', 'Civic', 'XYZ789', 30.00, 'Efectivo', 4, 'Buen viaje'),
('2024-01-03 09:15:00', 'Av. Principal', 'Plaza Central', 'Pedro Gómez', '345678901', 'Luis Torres', '765432109', 'Nissan', 'Sentra', 'DEF456', 22.75, 'Tarjeta', 4, 'Conductor puntual'),
('2024-01-04 18:45:00', 'Parque Industrial', 'Centro Comercial', 'Ana Martínez', '456789012', 'Jorge Sánchez', '654321098', 'Chevrolet', 'Spark', 'GHI789', 18.50, 'Efectivo', 3, 'Tráfico pesado'),
('2024-01-05 11:30:00', 'Universidad', 'Biblioteca', 'Carlos Rodríguez', '567890123', 'María Fernández', '543210987', 'Kia', 'Rio', 'JKL012', 15.25, 'Tarjeta', 5, 'Muy amable'),
('2024-01-06 14:00:00', 'Hospital', 'Aeropuerto', 'Laura Sánchez', '678901234', 'Roberto Gómez', '432109876', 'Hyundai', 'Accent', 'MNO345', 35.00, 'Tarjeta', 4, 'Viaje cómodo'),
('2024-01-07 20:30:00', 'Estadio', 'Hotel Central', 'Diego Fernández', '789012345', 'Carmen López', '321098765', 'Ford', 'Fiesta', 'PQR678', 28.75, 'Efectivo', 4, 'Buen conocimiento de la ruta'),
('2024-01-08 08:45:00', 'Terminal de Buses', 'Oficina', 'Sofía Torres', '890123456', 'Javier Martínez', '210987654', 'Volkswagen', 'Gol', 'STU901', 20.50, 'Tarjeta', 3, 'Algo de retraso'),
('2024-01-09 12:15:00', 'Centro de Convenciones', 'Restaurante', 'Gabriel Herrera', '901234567', 'Patricia Díaz', '109876543', 'Mazda', '2', 'VWX234', 17.25, 'Efectivo', 5, 'Excelente conversación'),
('2024-01-10 16:30:00', 'Playa', 'Hotel', 'Valentina Morales', '012345678', 'Eduardo Vargas', '098765432', 'Suzuki', 'Swift', 'YZA567', 40.00, 'Tarjeta', 4, 'Vehículo muy limpio'),
('2024-01-11 07:00:00', 'Gimnasio', 'Oficina', 'Andrés Castro', '123456780', 'Isabel Rojas', '987654310', 'Renault', 'Logan', 'BCD890', 16.50, 'Efectivo', 4, 'Puntual y eficiente'),
('2024-01-12 19:45:00', 'Cine', 'Residencia', 'Camila Vargas', '234567891', 'Fernando Mendoza', '876543210', 'Fiat', 'Uno', 'EFG123', 22.00, 'Tarjeta', 5, 'Conductor muy amable'),
('2024-01-13 13:30:00', 'Supermercado', 'Casa', 'Ricardo Mendoza', '345678902', 'Lucía Herrera', '765432101', 'Chevrolet', 'Onix', 'HIJ456', 19.75, 'Efectivo', 3, 'Ruta un poco larga'),
('2024-01-14 10:45:00', 'Escuela', 'Parque', 'Daniela Rojas', '456789013', 'Gustavo Silva', '654321092', 'Toyota', 'Yaris', 'KLM789', 14.50, 'Tarjeta', 4, 'Viaje tranquilo'),
('2024-01-15 17:15:00', 'Museo', 'Estación de Tren', 'Javier Paz', '567890124', 'Adriana Morales', '543210983', 'Nissan', 'Versa', 'NOP012', 26.25, 'Efectivo', 5, 'Excelente manejo');
INSERT INTO reserva_evento_2nf (fecha_evento, tipo_evento, cliente_nombre, cliente_telefono, cantidad_vehiculos, monto_total)
VALUES 
('2024-02-15', 'Boda', 'Pedro Gómez', '555-1234', 3, 150.00),
('2024-03-20', 'Conferencia', 'Empresa XYZ', '555-5678', 2, 100.00),
('2024-04-10', 'Cumpleaños', 'María Rodríguez', '555-2345', 1, 50.00),
('2024-05-05', 'Graduación', 'Universidad ABC', '555-3456', 5, 250.00),
('2024-06-15', 'Concierto', 'Productora Musical', '555-4567', 10, 500.00),
('2024-07-01', 'Feria', 'Municipalidad', '555-5678', 8, 400.00),
('2024-08-12', 'Boda', 'Ana y Juan', '555-6789', 4, 200.00),
('2024-09-23', 'Congreso', 'Asociación Médica', '555-7890', 6, 300.00),
('2024-10-31', 'Fiesta de Halloween', 'Club Nocturno', '555-8901', 5, 250.00),
('2024-11-15', 'Lanzamiento de Producto', 'Tech Inc.', '555-9012', 3, 150.00),
('2024-12-24', 'Cena de Navidad', 'Empresa ABC', '555-0123', 7, 350.00),
('2025-01-01', 'Fiesta de Año Nuevo', 'Hotel Estrella', '555-1234', 15, 750.00),
('2025-02-14', 'San Valentín', 'Restaurante Amor', '555-2345', 10, 500.00),
('2025-03-17', 'Desfile de San Patricio', 'Comunidad Irlandesa', '555-3456', 6, 300.00),
('2025-04-22', 'Día de la Tierra', 'ONG Ecológica', '555-4567', 4, 200.00);
INSERT INTO vehiculos_reserva_2nf (id_reserva, vehiculo_placa)
VALUES 
(1, 'ABC123'), (1, 'XYZ789'), (1, 'DEF456'),
(2, 'GHI789'), (2, 'JKL012'),
(3, 'MNO345'),
(4, 'PQR678'), (4, 'STU901'), (4, 'VWX234'), (4, 'YZA567'), (4, 'BCD890'),
(5, 'EFG123'), (5, 'HIJ456'), (5, 'KLM789'), (5, 'NOP012'), (5, 'QRS345'),
(5, 'TUV678'), (5, 'WXY901'), (5, 'ZAB234'), (5, 'CDE567'),
(6, 'FGH890'), (6, 'IJK123'), (6, 'LMN456'), (6, 'OPQ789'), (6, 'RST012'),
(6, 'UVW345'), (6, 'XYZ678'), (6, 'ABC901'),
(7, 'DEF234'), (7, 'GHI567'), (7, 'JKL890'), (7, 'MNO123'),
(8, 'PQR456'), (8, 'STU789'), (8, 'VWX012'), (8, 'YZA345'), (8, 'BCD678'), (8, 'EFG901'),
(9, 'HIJ234'), (9, 'KLM567'), (9, 'NOP890'), (9, 'QRS123'), (9, 'TUV456'),
(10, 'WXY789'), (10, 'ZAB012'), (10, 'CDE345'),
(11, 'FGH678'), (11, 'IJK901'), (11, 'LMN234'), (11, 'OPQ567'), (11, 'RST890'),
(11, 'UVW123'), (11, 'XYZ456'),
(12, 'ABC789'), (12, 'DEF012'), (12, 'GHI345'), (12, 'JKL678'), (12, 'MNO901'),
(12, 'PQR234'), (12, 'STU567'), (12, 'VWX890'), (12, 'YZA123'), (12, 'BCD456'),
(12, 'EFG789'), (12, 'HIJ012'), (12, 'KLM345'), (12, 'NOP678'),
(13, 'QRS901'), (13, 'TUV234'), (13, 'WXY567'), (13, 'ZAB890'), (13, 'CDE123'),
(13, 'FGH456'), (13, 'IJK789'), (13, 'LMN012'), (13, 'OPQ345'), (13, 'RST678'),
(14, 'UVW901'), (14, 'XYZ234'), (14, 'ABC567'), (14, 'DEF890'), (14, 'GHI123'), (14, 'JKL456'),
(15, 'MNO789'), (15, 'PQR012'), (15, 'STU345'), (15, 'VWX678');
INSERT INTO mantenimiento_vehiculo_3nf (fecha_mantenimiento, vehiculo_placa, tipo_mantenimiento, costo, id_mecanico, id_taller)
VALUES 
('2024-04-10', 'ABC123', 'Cambio de aceite', 50.00, 1, 1),
('2024-04-15', 'XYZ789', 'Alineación', 80.00, 2, 1),
('2024-04-20', 'DEF456', 'Cambio de frenos', 120.00, 1, 1),
('2024-04-25', 'GHI789', 'Revisión general', 100.00, 2, 1),
('2024-05-01', 'JKL012', 'Cambio de filtros', 60.00, 1, 1),
('2024-05-05', 'MNO345', 'Rotación de neumáticos', 40.00, 2, 1),
('2024-05-10', 'PQR678', 'Cambio de bujías', 70.00, 1, 1),
('2024-05-15', 'STU901', 'Cambio de batería', 150.00, 2, 1),
('2024-05-20', 'VWX234', 'Reparación de alternador', 200.00, 1, 1),
('2024-05-25', 'YZA567', 'Cambio de correa de distribución', 250.00, 2, 1),
('2024-06-01', 'BCD890', 'Cambio de amortiguadores', 300.00, 1, 1),
('2024-06-05', 'EFG123', 'Reparación de aire acondicionado', 180.00, 2, 1),
('2024-06-10', 'HIJ456', 'Cambio de embrague', 350.00, 1, 1),
('2024-06-15', 'KLM789', 'Afinación de motor', 150.00, 2, 1),
('2024-06-20', 'NOP012', 'Cambio de radiador', 220.00, 1, 1); 
INSERT INTO mecanico_3nf (nombre, especialidad)
VALUES 
('Juan Morales', 'Reparación de motores'),
('Sofía Torres', 'Frenos y suspensión'),
('Ricardo Castillo', 'Mantenimiento preventivo'),
('Lucía Gutiérrez', 'Diagnóstico computarizado'),
('Alberto Ramírez', 'Carrocería y pintura'),
('Fernanda Vega', 'Alineación y balanceo'),
('Diego Sánchez', 'Sistemas eléctricos'),
('Mariana López', 'Mecánica general'),
('Andrés Ríos', 'Reparación de transmisiones'),
('Gabriela Pérez', 'Refrigeración automotriz'),
('Francisco Herrera', 'Lubricación y filtros'),
('Paola Jiménez', 'Cambio de llantas'),
('Miguel Vargas', 'Reparación de alternadores'),
('Laura Díaz', 'Sistema de escape'),
('Roberto Paredes', 'Ajuste de válvulas');
INSERT INTO taller_3nf (nombre, direccion, telefono)
VALUES 
('Mecánica Integral', 'Av. Perú 123', '555-6789'),
('Ruedas y Más', 'Calle Los Olivos 456', '555-7890'),
('Taller Central', 'Av. Central 789', '555-8901'),
('Frenos Exprés', 'Calle Bolívar 101', '555-9012'),
('Motores al Día', 'Av. El Sol 202', '555-0123'),
('Suspensiones Perfectas', 'Calle Miraflores 303', '555-1234'),
('Carrocerías Limpias', 'Av. Las Palmas 404', '555-2345'),
('Alineaciones Pro', 'Calle Los Laureles 505', '555-3456'),
('Motor y Más', 'Av. Primavera 606', '555-4567'),
('Sistema Eléctrico Exprés', 'Calle El Roble 707', '555-5678'),
('Diagnósticos Precisos', 'Av. Arenales 808', '555-6789'),
('Taller del Norte', 'Calle Independencia 909', '555-7890'),
('Mecánica Sur', 'Av. San Juan 1010', '555-8901'),
('Taller Rápido Fix', 'Calle Progreso 1111', '555-9012'),
('AutoTech Pro', 'Av. Libertad 1212', '555-0123');

-----------------------------REVISION DE TABLAS A NORMALIZAR----------------------------------

--MODIFICACION DE LA TABLA PASAJERO Y LA CREACION DE LA TABLA DIRECCION
CREATE TABLE direccion (
    id_direccion SERIAL PRIMARY KEY,
    direccion_completa VARCHAR(255) NOT NULL
);

INSERT INTO direccion (direccion_completa)
SELECT DISTINCT direccion
FROM pasajero;

ALTER TABLE pasajero ADD COLUMN id_direccion INT;

UPDATE pasajero
SET id_direccion = (
    SELECT id_direccion
    FROM direccion
    WHERE direccion.direccion_completa = pasajero.direccion
);

ALTER TABLE pasajero DROP COLUMN direccion;

ALTER TABLE pasajero
ADD FOREIGN KEY (id_direccion) REFERENCES direccion(id_direccion);

--MODIFICACION DE LA TABLA PAGO Y LA CREACION DE LA TABLA METODO_PAGO
CREATE TABLE metodo_pago (
    id_metodo_pago SERIAL PRIMARY KEY,
    descripcion VARCHAR(50) NOT NULL
);

INSERT INTO metodo_pago (descripcion)
SELECT DISTINCT metodo_pago
FROM pago;

ALTER TABLE pago ADD COLUMN id_metodo_pago INT;

UPDATE pago
SET id_metodo_pago = (
    SELECT id_metodo_pago
    FROM metodo_pago
    WHERE metodo_pago.descripcion = pago.metodo_pago
);

ALTER TABLE pago DROP COLUMN metodo_pago;

ALTER TABLE pago
ADD FOREIGN KEY (id_metodo_pago) REFERENCES metodo_pago(id_metodo_pago);

--MODIFICACION DE LA TABLA CALIFICACION 
ALTER TABLE calificacion
ADD COLUMN id_calificacion SERIAL PRIMARY KEY;

----------------------------PARA EL SIGUIENTE APARTADO SE AGREGARAN DATOS COMO PASAJEROS SIN VIAJES  o vehiculos sin viajes-------------
INSERT INTO conductor (id_conductor, nombre, telefono, licencia)
VALUES
    (21, 'Carlos Mendoza', '987654321', 'LMN12345'),
    (22, 'Laura Gómez', '876543210', 'OPQ67890'),
    (23, 'Miguel Torres', '765432109', 'RST34567'),
    (24, 'Ana Ruiz', '654321098', 'UVW98765');

INSERT INTO vehiculo (id_conductor, marca, modelo, ano, placa)
VALUES
    (21, 'Toyota', 'Yaris', 2022, 'XYZ999'),
    (22, 'Nissan', 'Altima', 2023, 'ABC123'),
    (23, 'Chevrolet', 'Cruze', 2021, 'DEF456'),
    (24, 'Hyundai', 'Elantra', 2020, 'GHI789');

INSERT INTO direccion (direccion_completa)
VALUES
    ('Calle Armonía 321'),
    ('Avenida Paz 654'),
    ('Plaza Serenidad 987'),
    ('Parque Estrella 432'),
    ('Calle Libertad 876');

INSERT INTO pasajero (nombre, telefono, correo_electronico, id_direccion)
VALUES
    ('Sofía Martínez', '900123456', 'sofia.martinez@example.com', 21),
    ('Diego Castillo', '910654321', 'diego.castillo@example.com', 22),
    ('Valeria Ortega', '920987654', 'valeria.ortega@example.com', 23),
    ('Tomás Villanueva', '930567890', 'tomas.villanueva@example.com', 24),
    ('Camila Mendoza', '940345678', 'camila.mendoza@example.com', 25);

----------------------------CONSULTAS AVANZADAS CON JOIN--------------------------------------
-------------------NATURAL JOIN-------------
--Informacion del viaje datos como origen, destino y calificacion
SELECT 
    viaje.id_viaje, 
    viaje.origen, 
    viaje.destino, 
    calificacion.calificacion
FROM 
    viaje 
NATURAL JOIN 
    calificacion;
    
--Obtener todos los viajes junto con los nombres de los pasajero y los vehiculos
SELECT 
    viaje.id_viaje, 
    pasajero.nombre AS pasajero, 
    vehiculo.marca AS vehiculo
FROM 
    viaje
NATURAL JOIN pasajero
NATURAL JOIN vehiculo;

--Mostrar información completa de los pagos asociados a viajes
SELECT 
    pago.id_pago, 
    pago.monto, 
    viaje.origen, 
    viaje.destino
FROM 
    pago
NATURAL JOIN viaje;



-------------------------- LEFT JOIN--------------------------
--Listar todos los pasajeros, incluso los que no tienen viajes registrados
SELECT 
    pasajero.nombre, 
    viaje.id_viaje, 
    viaje.origen
FROM 
    pasajero
LEFT JOIN viaje 
ON pasajero.id_pasajero = viaje.id_pasajero;

--Mostrar todos los conductores, incluso aquellos que no tienen vehículos asociados

SELECT 
    conductor.nombre AS conductor, 
    vehiculo.marca, 
    vehiculo.modelo
FROM 
    conductor
LEFT JOIN vehiculo 
ON conductor.id_conductor = vehiculo.id_conductor;

--Listar todos los vehículos, incluso aquellos que no han sido usados en viajes:
SELECT 
    vehiculo.marca, 
    vehiculo.modelo, 
    viaje.id_viaje
FROM 
    vehiculo
LEFT JOIN viaje 
ON vehiculo.id_vehiculo = viaje.id_vehiculo;

--------------------------RIGHT JOIN--------------------

--Listar todas las calificaciones, incluyendo viajes no calificados y mostrando información adicional del destino:
SELECT 
    calificacion.id_viaje, 
    viaje.origen, 
    viaje.destino, 
    calificacion.calificacion
FROM 
    calificacion
RIGHT JOIN viaje ON calificacion.id_viaje = viaje.id_viaje;

--Obtener conductores y su cantidad de viajes realizados, incluyendo conductores sin viajes:
SELECT 
    conductor.nombre AS conductor, 
    COUNT(viaje.id_viaje) AS total_viajes
FROM 
    viaje
RIGHT JOIN vehiculo ON viaje.id_vehiculo = vehiculo.id_vehiculo
RIGHT JOIN conductor ON vehiculo.id_conductor = conductor.id_conductor
GROUP BY conductor.nombre;

--Identificar los vehículos que no tienen viajes registrados:
SELECT 
    vehiculo.id_vehiculo, 
    vehiculo.marca, 
    vehiculo.modelo, 
    COUNT(viaje.id_viaje) AS total_viajes
FROM 
    viaje
RIGHT JOIN vehiculo ON viaje.id_vehiculo = vehiculo.id_vehiculo
GROUP BY vehiculo.id_vehiculo, vehiculo.marca, vehiculo.modelo
HAVING COUNT(viaje.id_viaje) = 0;

--------------------------FULL JOIN------------------

--Obtener la relación completa de pasajeros y viajes, indicando si hay pasajeros sin viajes o viajes sin pasajeros:
SELECT 
    pasajero.nombre AS pasajero, 
    viaje.origen, 
    viaje.destino
FROM 
    pasajero
FULL JOIN viaje ON pasajero.id_pasajero = viaje.id_pasajero
ORDER BY pasajero.nombre;

--Mostrar vehículos y sus viajes, incluyendo vehículos no utilizados y viajes sin vehículos asignados:
SELECT 
    vehiculo.marca, 
    vehiculo.modelo, 
    viaje.origen, 
    viaje.destino
FROM 
    vehiculo
FULL JOIN viaje ON vehiculo.id_vehiculo = viaje.id_vehiculo
ORDER BY vehiculo.marca;

--Listar todas las calificaciones y los viajes relacionados, incluyendo viajes sin calificaciones y calificaciones no asociadas a un viaje:
SELECT 
    viaje.id_viaje, 
    viaje.origen, 
    calificacion.calificacion
FROM 
    viaje
FULL JOIN calificacion ON viaje.id_viaje = calificacion.id_viaje
ORDER BY viaje.id_viaje;



----------------------------CONSULTAS CON GROUP BY Y HAVING-------------------------------------------


    SELECT 
    viaje.origen, 
    COUNT(viaje.id_viaje) AS total_viajes 
FROM 
    viaje 
GROUP BY 
    viaje.origen 
ORDER BY 
    total_viajes DESC;

--------------------------

SELECT 
    conductor.nombre, 
    SUM(pago.monto) AS total_ingresos 
FROM 
    conductor 
JOIN 
    vehiculo ON conductor.id_conductor = vehiculo.id_conductor 
JOIN 
    viaje ON vehiculo.id_vehiculo = viaje.id_vehiculo 
JOIN 
    pago ON viaje.id_viaje = pago.id_viaje 
GROUP BY 
    conductor.nombre;

--------------------------

SELECT 
    pago.metodo_pago, 
    SUM(pago.monto) AS total_pagado 
FROM 
    pago 
GROUP BY 
    pago.metodo_pago;

--------------------------

SELECT 
    viaje.id_viaje, 
    AVG(calificacion.calificacion) AS promedio_calificacion 
FROM 
    viaje 
JOIN 
    calificacion ON viaje.id_viaje = calificacion.id_viaje 
GROUP BY 
    viaje.id_viaje 
HAVING 
    AVG(calificacion.calificacion) > 4;

--------------------------

SELECT 
    conductor.nombre, 
    MAX(viaje.duracion) AS duracion_maxima 
FROM 
    viaje 
JOIN 
    vehiculo ON viaje.id_vehiculo = vehiculo.id_vehiculo 
JOIN 
    conductor ON vehiculo.id_conductor = conductor.id_conductor 
GROUP BY 
    conductor.nombre;

--------------------------

SELECT 
    vehiculo.modelo, 
    COUNT(vehiculo.id_vehiculo) AS total_vehiculos 
FROM 
    vehiculo 
GROUP BY 
    vehiculo.modelo 
ORDER BY 
    total_vehiculos DESC;

------------------------

--Maurizio consultas group by y having--

SELECT 
    c.nombre AS conductor_nombre,
    COUNT(v.id_viaje) AS total_viajes
FROM conductor c
JOIN vehiculo vh ON c.id_conductor = vh.id_conductor
JOIN viaje v ON vh.id_vehiculo = v.id_vehiculo
GROUP BY c.nombre
HAVING COUNT(v.id_viaje) > 5;
--------------------------
SELECT 
    vh.marca AS vehiculo_marca,
    vh.modelo AS vehiculo_modelo,
    SUM(pg.monto) AS total_ingresos
FROM vehiculo vh
JOIN viaje v ON vh.id_vehiculo = v.id_vehiculo
JOIN pago pg ON v.id_viaje = pg.id_viaje
GROUP BY vh.marca, vh.modelo
HAVING SUM(pg.monto) > 500;
------------------------------ 
SELECT 
    p.nombre AS pasajero_nombre,
    AVG(c.calificacion) AS promedio_calificacion
FROM pasajero p
JOIN viaje v ON p.id_pasajero = v.id_pasajero
JOIN calificacion c ON v.id_viaje = c.id_viaje
GROUP BY p.nombre
HAVING AVG(c.calificacion) > 4;
-------------------------------
SELECT 
    v.destino,
    COUNT(v.id_viaje) AS total_viajes
FROM viaje v
GROUP BY v.destino
HAVING COUNT(v.id_viaje) > 3;
------------------------------------




---------------------------------CREACION DE VISTAS-----------------------------------

-- Maurizio resumen_viajes_pasajero--

CREATE VIEW resumen_viajes_pasajero AS
SELECT 
    p.nombre AS pasajero_nombre,
    COUNT(v.id_viaje) AS total_viajes,
    SUM(pg.monto) AS monto_total_pagado,
    AVG(c.calificacion) AS promedio_calificacion
FROM pasajero p
LEFT JOIN viaje v ON p.id_pasajero = v.id_pasajero
LEFT JOIN pago pg ON v.id_viaje = pg.id_viaje
LEFT JOIN calificacion c ON v.id_viaje = c.id_viaje
GROUP BY p.nombre;




-- Maurizio vehiculos_sin_viajes --

CREATE VIEW vehiculos_sin_viajes AS
SELECT 
    v.marca,
    v.modelo,
    v.placa
FROM vehiculo v
LEFT JOIN viaje vi ON v.id_vehiculo = vi.id_vehiculo
WHERE vi.id_vehiculo IS NULL;


-- Maurizio ingresos_por_conductor ---

CREATE VIEW ingresos_por_conductor AS
SELECT 
    c.nombre AS conductor_nombre,
    SUM(pg.monto) AS total_ingresos,
    COUNT(v.id_viaje) AS total_viajes
FROM conductor c
JOIN vehiculo vh ON c.id_conductor = vh.id_conductor
JOIN viaje v ON vh.id_vehiculo = v.id_vehiculo
JOIN pago pg ON v.id_viaje = pg.id_viaje
GROUP BY c.nombre;


-- Maurizio viajes_sin_calificar --

CREATE VIEW viajes_sin_calificar AS
SELECT 
    v.id_viaje,
    v.origen,
    v.destino,
    v.fecha
FROM viaje v
LEFT JOIN calificacion c ON v.id_viaje = c.id_viaje
WHERE c.id_viaje IS NULL;

-- Maurizio pagos_pendientes --

CREATE VIEW pagos_pendientes AS
SELECT 
    v.id_viaje,
    v.origen,
    v.destino,
    v.fecha,
    pg.monto
FROM viaje v
LEFT JOIN pago pg ON v.id_viaje = pg.id_viaje
WHERE pg.id_pago IS NULL;


-- Maurizio rendimiento_conductores --

CREATE VIEW rendimiento_conductores AS
SELECT 
    c.nombre AS conductor_nombre,
    AVG(ca.calificacion) AS promedio_calificacion,
    AVG(v.duracion) AS duracion_promedio
FROM conductor c
JOIN vehiculo vh ON c.id_conductor = vh.id_conductor
JOIN viaje v ON vh.id_vehiculo = v.id_vehiculo
JOIN calificacion ca ON v.id_viaje = ca.id_viaje
GROUP BY c.nombre;

------------------------------------------------------
    CREATE VIEW resumen_viajes_conductor AS 
SELECT 
    conductor.nombre AS conductor_nombre, 
    COUNT(viaje.id_viaje) AS total_viajes, 
    AVG(viaje.duracion) AS duracion_promedio, 
    COUNT(DISTINCT viaje.id_pasajero) AS total_pasajeros 
FROM 
    conductor 
JOIN 
    vehiculo ON vehiculo.id_conductor = conductor.id_conductor 
JOIN 
    viaje ON viaje.id_vehiculo = vehiculo.id_vehiculo 
GROUP BY 
    conductor.nombre;
--------------------------

SELECT * FROM resumen_viajes_conductor;

--------------------------

CREATE VIEW viajes_largos_conductor AS 
SELECT 
    conductor.nombre AS conductor_nombre, 
    viaje.id_viaje, 
    viaje.origen, 
    viaje.destino, 
    viaje.duracion 
FROM 
    conductor 
JOIN 
    vehiculo ON vehiculo.id_conductor = conductor.id_conductor 
JOIN 
    viaje ON viaje.id_vehiculo = vehiculo.id_vehiculo 
WHERE 
    viaje.duracion = (SELECT MAX(duracion) FROM viaje WHERE id_vehiculo = vehiculo.id_vehiculo) 
ORDER BY 
    conductor.nombre;

--------------------------

SELECT * FROM viajes_largos_conductor;

--------------------------

CREATE VIEW pagos_totales_metodo AS 
SELECT 
    pago.metodo_pago, 
    SUM(pago.monto) AS monto_total 
FROM 
    pago 
GROUP BY 
    pago.metodo_pago;

--------------------------

SELECT * FROM pagos_totales_metodo;

--------------------------

CREATE VIEW promedio_calificacion_conductor AS 
SELECT 
    conductor.nombre AS conductor_nombre, 
    AVG(calificacion.calificacion) AS promedio_calificacion 
FROM 
    conductor 
JOIN 
    vehiculo ON vehiculo.id_conductor = conductor.id_conductor 
JOIN 
    viaje ON viaje.id_vehiculo = vehiculo.id_vehiculo 
JOIN 
    calificacion ON calificacion.id_viaje = viaje.id_viaje 
GROUP BY 
    conductor.nombre 
HAVING 
    AVG(calificacion.calificacion) > 4;

--------------------------

SELECT * FROM promedio_calificacion_conductor;

--------------------------

CREATE VIEW reservas_evento_cliente AS 
SELECT 
    reserva_evento.cliente_nombre, 
    reserva_evento.tipo_evento, 
    COUNT(reserva_evento.id_reserva) AS total_reservas 
FROM 
    reserva_evento 
GROUP BY 
    reserva_evento.cliente_nombre, reserva_evento.tipo_evento 
HAVING 
    COUNT(reserva_evento.id_reserva) > 2;

--------------------------

SELECT * FROM reservas_evento_cliente;

--------------------------

CREATE VIEW viajes_pendientes_pago AS 
SELECT 
    viaje.id_viaje, 
    viaje.origen, 
    viaje.destino, 
    pago.monto, 
    pago.fecha_pago 
FROM 
    viaje 
JOIN 
    pago ON pago.id_viaje = viaje.id_viaje 
WHERE 
    pago.fecha_pago IS NULL 
ORDER BY 
    viaje.id_viaje;

--------------------------

SELECT * FROM viajes_pendientes_pago;

--------------------------

SELECT * FROM viajes_pendientes_pago;
